-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity fft_unpackComplex is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    dst_dout : IN STD_LOGIC_VECTOR (127 downto 0);
    dst_empty_n : IN STD_LOGIC;
    dst_read : OUT STD_LOGIC;
    eos_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    eos_empty_n : IN STD_LOGIC;
    eos_read : OUT STD_LOGIC;
    real_out_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
    real_out_TVALID : OUT STD_LOGIC;
    real_out_TREADY : IN STD_LOGIC;
    real_out_TKEEP : OUT STD_LOGIC_VECTOR (7 downto 0);
    real_out_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    imag_out_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
    imag_out_TVALID : OUT STD_LOGIC;
    imag_out_TREADY : IN STD_LOGIC;
    imag_out_TKEEP : OUT STD_LOGIC_VECTOR (7 downto 0);
    imag_out_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of fft_unpackComplex is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_7E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111110";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv12_433 : STD_LOGIC_VECTOR (11 downto 0) := "010000110011";
    constant ap_const_lv11_433 : STD_LOGIC_VECTOR (10 downto 0) := "10000110011";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv12_36 : STD_LOGIC_VECTOR (11 downto 0) := "000000110110";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_74 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110100";
    constant ap_const_lv32_73 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110011";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal dst_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal eos_blk_n : STD_LOGIC;
    signal real_out_TDATA_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal imag_out_TDATA_blk_n : STD_LOGIC;
    signal t_last_read_fu_98_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal t_last_reg_480 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_io : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_io : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal t_last_reg_480_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_7_reg_486 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_7_reg_486_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln315_fu_216_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal trunc_ln315_reg_491 : STD_LOGIC_VECTOR (51 downto 0);
    signal icmp_ln323_fu_220_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln323_reg_496 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln327_fu_236_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln327_reg_500 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln329_fu_242_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln329_reg_504 : STD_LOGIC_VECTOR (0 downto 0);
    signal sh_amt_1_fu_248_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal sh_amt_1_reg_508 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_reg_513 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln330_fu_264_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln330_reg_518 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln331_fu_270_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln331_reg_522 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Result_9_reg_527 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_9_reg_527_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_5_reg_532 : STD_LOGIC_VECTOR (51 downto 0);
    signal icmp_ln323_1_fu_306_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln323_1_reg_537 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln327_1_fu_322_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln327_1_reg_541 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln329_1_fu_328_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln329_1_reg_545 : STD_LOGIC_VECTOR (0 downto 0);
    signal sh_amt_3_fu_334_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal sh_amt_3_reg_549 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_2_reg_554 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln330_1_fu_350_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln330_1_reg_559 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln331_1_fu_356_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln331_1_reg_563 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln337_fu_371_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln339_fu_383_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln331_1_fu_398_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln328_fu_402_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln337_1_fu_417_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln339_1_fu_429_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln331_3_fu_444_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln328_1_fu_448_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_flush_enable : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_phi_reg_pp0_iter0_ref_tmp6_0_reg_138 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter1_ref_tmp6_0_reg_138 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter2_ref_tmp6_0_reg_138 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter0_ref_tmp10_0_reg_159 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter1_ref_tmp10_0_reg_159 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter2_ref_tmp10_0_reg_159 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal p_Result_s_fu_202_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln145_fu_180_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln311_fu_212_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_fu_226_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln326_fu_232_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Result_4_fu_282_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln_fu_184_p4 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln311_1_fu_292_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_2_fu_312_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln326_1_fu_318_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Result_8_fu_360_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal zext_ln338_fu_376_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln339_fu_380_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln320_fu_367_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal zext_ln331_fu_389_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal lshr_ln331_fu_392_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal p_Result_10_fu_406_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal zext_ln338_1_fu_422_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln339_1_fu_426_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln320_1_fu_413_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal zext_ln331_2_fu_435_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal lshr_ln331_1_fu_438_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal sub_ln455_fu_452_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_ln455_1_fu_466_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal regslice_both_real_V_data_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_imag_V_data_V_U_apdone_blk : STD_LOGIC;
    signal ap_block_state6 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal real_out_TDATA_int_regslice : STD_LOGIC_VECTOR (63 downto 0);
    signal real_out_TVALID_int_regslice : STD_LOGIC;
    signal real_out_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_real_V_data_V_U_vld_out : STD_LOGIC;
    signal regslice_both_real_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_real_V_keep_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_real_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_real_V_last_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_real_V_last_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_real_V_last_V_U_vld_out : STD_LOGIC;
    signal imag_out_TDATA_int_regslice : STD_LOGIC_VECTOR (63 downto 0);
    signal imag_out_TVALID_int_regslice : STD_LOGIC;
    signal imag_out_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_imag_V_data_V_U_vld_out : STD_LOGIC;
    signal regslice_both_imag_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_imag_V_keep_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_imag_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_imag_V_last_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_imag_V_last_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_imag_V_last_V_U_vld_out : STD_LOGIC;

    component regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    regslice_both_real_V_data_V_U : component regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => real_out_TDATA_int_regslice,
        vld_in => real_out_TVALID_int_regslice,
        ack_in => real_out_TREADY_int_regslice,
        data_out => real_out_TDATA,
        vld_out => regslice_both_real_V_data_V_U_vld_out,
        ack_out => real_out_TREADY,
        apdone_blk => regslice_both_real_V_data_V_U_apdone_blk);

    regslice_both_real_V_keep_V_U : component regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => ap_const_lv8_FF,
        vld_in => real_out_TVALID_int_regslice,
        ack_in => regslice_both_real_V_keep_V_U_ack_in_dummy,
        data_out => real_out_TKEEP,
        vld_out => regslice_both_real_V_keep_V_U_vld_out,
        ack_out => real_out_TREADY,
        apdone_blk => regslice_both_real_V_keep_V_U_apdone_blk);

    regslice_both_real_V_last_V_U : component regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => t_last_reg_480_pp0_iter1_reg,
        vld_in => real_out_TVALID_int_regslice,
        ack_in => regslice_both_real_V_last_V_U_ack_in_dummy,
        data_out => real_out_TLAST,
        vld_out => regslice_both_real_V_last_V_U_vld_out,
        ack_out => real_out_TREADY,
        apdone_blk => regslice_both_real_V_last_V_U_apdone_blk);

    regslice_both_imag_V_data_V_U : component regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => imag_out_TDATA_int_regslice,
        vld_in => imag_out_TVALID_int_regslice,
        ack_in => imag_out_TREADY_int_regslice,
        data_out => imag_out_TDATA,
        vld_out => regslice_both_imag_V_data_V_U_vld_out,
        ack_out => imag_out_TREADY,
        apdone_blk => regslice_both_imag_V_data_V_U_apdone_blk);

    regslice_both_imag_V_keep_V_U : component regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => ap_const_lv8_FF,
        vld_in => imag_out_TVALID_int_regslice,
        ack_in => regslice_both_imag_V_keep_V_U_ack_in_dummy,
        data_out => imag_out_TKEEP,
        vld_out => regslice_both_imag_V_keep_V_U_vld_out,
        ack_out => imag_out_TREADY,
        apdone_blk => regslice_both_imag_V_keep_V_U_apdone_blk);

    regslice_both_imag_V_last_V_U : component regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => t_last_reg_480_pp0_iter1_reg,
        vld_in => imag_out_TVALID_int_regslice,
        ack_in => regslice_both_imag_V_last_V_U_ack_in_dummy,
        data_out => imag_out_TLAST,
        vld_out => regslice_both_imag_V_last_V_U_vld_out,
        ack_out => imag_out_TREADY,
        apdone_blk => regslice_both_imag_V_last_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((not(((regslice_both_imag_V_data_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_real_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_pp0_flush_enable)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter2_ref_tmp10_0_reg_159_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln330_1_reg_559 = ap_const_lv1_0) and (icmp_ln329_1_reg_545 = ap_const_lv1_1) and (icmp_ln327_1_reg_541 = ap_const_lv1_0) and (icmp_ln323_1_reg_537 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln323_1_reg_537 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln337_1_fu_417_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln329_1_reg_545 = ap_const_lv1_0) and (icmp_ln327_1_reg_541 = ap_const_lv1_0) and (icmp_ln323_1_reg_537 = ap_const_lv1_0)))) then 
                ap_phi_reg_pp0_iter2_ref_tmp10_0_reg_159 <= ap_const_lv64_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln337_1_fu_417_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln329_1_reg_545 = ap_const_lv1_0) and (icmp_ln327_1_reg_541 = ap_const_lv1_0) and (icmp_ln323_1_reg_537 = ap_const_lv1_0))) then 
                ap_phi_reg_pp0_iter2_ref_tmp10_0_reg_159 <= shl_ln339_1_fu_429_p2;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln330_1_reg_559 = ap_const_lv1_1) and (icmp_ln329_1_reg_545 = ap_const_lv1_1) and (icmp_ln327_1_reg_541 = ap_const_lv1_0) and (icmp_ln323_1_reg_537 = ap_const_lv1_0))) then 
                ap_phi_reg_pp0_iter2_ref_tmp10_0_reg_159 <= zext_ln331_3_fu_444_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln327_1_reg_541 = ap_const_lv1_1) and (icmp_ln323_1_reg_537 = ap_const_lv1_0))) then 
                ap_phi_reg_pp0_iter2_ref_tmp10_0_reg_159 <= zext_ln328_1_fu_448_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                ap_phi_reg_pp0_iter2_ref_tmp10_0_reg_159 <= ap_phi_reg_pp0_iter1_ref_tmp10_0_reg_159;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter2_ref_tmp6_0_reg_138_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln337_fu_371_p2 = ap_const_lv1_0) and (icmp_ln329_reg_504 = ap_const_lv1_0) and (icmp_ln327_reg_500 = ap_const_lv1_0) and (icmp_ln323_reg_496 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln330_reg_518 = ap_const_lv1_0) and (icmp_ln329_reg_504 = ap_const_lv1_1) and (icmp_ln327_reg_500 = ap_const_lv1_0) and (icmp_ln323_reg_496 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln323_reg_496 = ap_const_lv1_1)))) then 
                ap_phi_reg_pp0_iter2_ref_tmp6_0_reg_138 <= ap_const_lv64_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln337_fu_371_p2 = ap_const_lv1_1) and (icmp_ln329_reg_504 = ap_const_lv1_0) and (icmp_ln327_reg_500 = ap_const_lv1_0) and (icmp_ln323_reg_496 = ap_const_lv1_0))) then 
                ap_phi_reg_pp0_iter2_ref_tmp6_0_reg_138 <= shl_ln339_fu_383_p2;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln330_reg_518 = ap_const_lv1_1) and (icmp_ln329_reg_504 = ap_const_lv1_1) and (icmp_ln327_reg_500 = ap_const_lv1_0) and (icmp_ln323_reg_496 = ap_const_lv1_0))) then 
                ap_phi_reg_pp0_iter2_ref_tmp6_0_reg_138 <= zext_ln331_1_fu_398_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln327_reg_500 = ap_const_lv1_1) and (icmp_ln323_reg_496 = ap_const_lv1_0))) then 
                ap_phi_reg_pp0_iter2_ref_tmp6_0_reg_138 <= zext_ln328_fu_402_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                ap_phi_reg_pp0_iter2_ref_tmp6_0_reg_138 <= ap_phi_reg_pp0_iter1_ref_tmp6_0_reg_138;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_phi_reg_pp0_iter1_ref_tmp10_0_reg_159 <= ap_phi_reg_pp0_iter0_ref_tmp10_0_reg_159;
                ap_phi_reg_pp0_iter1_ref_tmp6_0_reg_138 <= ap_phi_reg_pp0_iter0_ref_tmp6_0_reg_138;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln323_1_reg_537 <= icmp_ln323_1_fu_306_p2;
                icmp_ln323_reg_496 <= icmp_ln323_fu_220_p2;
                p_Result_5_reg_532 <= dst_dout(115 downto 64);
                p_Result_7_reg_486 <= dst_dout(63 downto 63);
                p_Result_7_reg_486_pp0_iter1_reg <= p_Result_7_reg_486;
                p_Result_9_reg_527 <= dst_dout(127 downto 127);
                p_Result_9_reg_527_pp0_iter1_reg <= p_Result_9_reg_527;
                t_last_reg_480 <= eos_dout;
                t_last_reg_480_pp0_iter1_reg <= t_last_reg_480;
                trunc_ln315_reg_491 <= trunc_ln315_fu_216_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln323_1_fu_306_p2 = ap_const_lv1_0))) then
                icmp_ln327_1_reg_541 <= icmp_ln327_1_fu_322_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln323_fu_220_p2 = ap_const_lv1_0))) then
                icmp_ln327_reg_500 <= icmp_ln327_fu_236_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln327_1_fu_322_p2 = ap_const_lv1_0) and (icmp_ln323_1_fu_306_p2 = ap_const_lv1_0))) then
                icmp_ln329_1_reg_545 <= icmp_ln329_1_fu_328_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln327_fu_236_p2 = ap_const_lv1_0) and (icmp_ln323_fu_220_p2 = ap_const_lv1_0))) then
                icmp_ln329_reg_504 <= icmp_ln329_fu_242_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln329_1_fu_328_p2 = ap_const_lv1_1) and (icmp_ln327_1_fu_322_p2 = ap_const_lv1_0) and (icmp_ln323_1_fu_306_p2 = ap_const_lv1_0))) then
                icmp_ln330_1_reg_559 <= icmp_ln330_1_fu_350_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln329_fu_242_p2 = ap_const_lv1_1) and (icmp_ln327_fu_236_p2 = ap_const_lv1_0) and (icmp_ln323_fu_220_p2 = ap_const_lv1_0))) then
                icmp_ln330_reg_518 <= icmp_ln330_fu_264_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln329_fu_242_p2 = ap_const_lv1_0) and (icmp_ln327_fu_236_p2 = ap_const_lv1_0) and (icmp_ln323_fu_220_p2 = ap_const_lv1_0))) then
                sh_amt_1_reg_508 <= sh_amt_1_fu_248_p2;
                tmp_reg_513 <= sh_amt_1_fu_248_p2(9 downto 6);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln329_1_fu_328_p2 = ap_const_lv1_0) and (icmp_ln327_1_fu_322_p2 = ap_const_lv1_0) and (icmp_ln323_1_fu_306_p2 = ap_const_lv1_0))) then
                sh_amt_3_reg_549 <= sh_amt_3_fu_334_p2;
                tmp_2_reg_554 <= sh_amt_3_fu_334_p2(9 downto 6);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln330_1_fu_350_p2 = ap_const_lv1_1) and (icmp_ln329_1_fu_328_p2 = ap_const_lv1_1) and (icmp_ln327_1_fu_322_p2 = ap_const_lv1_0) and (icmp_ln323_1_fu_306_p2 = ap_const_lv1_0))) then
                trunc_ln331_1_reg_563 <= trunc_ln331_1_fu_356_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln330_fu_264_p2 = ap_const_lv1_1) and (icmp_ln329_fu_242_p2 = ap_const_lv1_1) and (icmp_ln327_fu_236_p2 = ap_const_lv1_0) and (icmp_ln323_fu_220_p2 = ap_const_lv1_0))) then
                trunc_ln331_reg_522 <= trunc_ln331_fu_270_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_subdone, ap_CS_fsm_state6, regslice_both_real_V_data_V_U_apdone_blk, regslice_both_imag_V_data_V_U_apdone_blk)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state6 => 
                if ((not(((regslice_both_imag_V_data_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_real_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state6 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(dst_empty_n, eos_empty_n, ap_enable_reg_pp0_iter0)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((eos_empty_n = ap_const_logic_0) or (dst_empty_n = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(dst_empty_n, eos_empty_n, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_block_state4_io, ap_block_state5_io)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state5_io)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state4_io)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((eos_empty_n = ap_const_logic_0) or (dst_empty_n = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(dst_empty_n, eos_empty_n, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_block_state4_io, ap_block_state5_io)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state5_io)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state4_io)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((eos_empty_n = ap_const_logic_0) or (dst_empty_n = ap_const_logic_0))));
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_block_state2_pp0_stage0_iter0_assign_proc : process(dst_empty_n, eos_empty_n)
    begin
                ap_block_state2_pp0_stage0_iter0 <= ((eos_empty_n = ap_const_logic_0) or (dst_empty_n = ap_const_logic_0));
    end process;

        ap_block_state3_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_io_assign_proc : process(real_out_TREADY_int_regslice, imag_out_TREADY_int_regslice)
    begin
                ap_block_state4_io <= ((imag_out_TREADY_int_regslice = ap_const_logic_0) or (real_out_TREADY_int_regslice = ap_const_logic_0));
    end process;

        ap_block_state4_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state5_io_assign_proc : process(real_out_TREADY_int_regslice, imag_out_TREADY_int_regslice)
    begin
                ap_block_state5_io <= ((imag_out_TREADY_int_regslice = ap_const_logic_0) or (real_out_TREADY_int_regslice = ap_const_logic_0));
    end process;

        ap_block_state5_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state6_assign_proc : process(regslice_both_real_V_data_V_U_apdone_blk, regslice_both_imag_V_data_V_U_apdone_blk)
    begin
                ap_block_state6 <= ((regslice_both_imag_V_data_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_real_V_data_V_U_apdone_blk = ap_const_logic_1));
    end process;


    ap_condition_pp0_flush_enable_assign_proc : process(ap_CS_fsm_pp0_stage0, t_last_read_fu_98_p2, ap_block_pp0_stage0_subdone)
    begin
        if (((t_last_read_fu_98_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_pp0_flush_enable <= ap_const_logic_1;
        else 
            ap_condition_pp0_flush_enable <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state6, regslice_both_real_V_data_V_U_apdone_blk, regslice_both_imag_V_data_V_U_apdone_blk)
    begin
        if ((not(((regslice_both_imag_V_data_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_real_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_ref_tmp10_0_reg_159 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_ref_tmp6_0_reg_138 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_ready_assign_proc : process(ap_CS_fsm_state6, regslice_both_real_V_data_V_U_apdone_blk, regslice_both_imag_V_data_V_U_apdone_blk)
    begin
        if ((not(((regslice_both_imag_V_data_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_real_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    dst_blk_n_assign_proc : process(dst_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            dst_blk_n <= dst_empty_n;
        else 
            dst_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    dst_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            dst_read <= ap_const_logic_1;
        else 
            dst_read <= ap_const_logic_0;
        end if; 
    end process;


    eos_blk_n_assign_proc : process(eos_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            eos_blk_n <= eos_empty_n;
        else 
            eos_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    eos_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            eos_read <= ap_const_logic_1;
        else 
            eos_read <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln323_1_fu_306_p2 <= "1" when (trunc_ln_fu_184_p4 = ap_const_lv63_0) else "0";
    icmp_ln323_fu_220_p2 <= "1" when (trunc_ln145_fu_180_p1 = ap_const_lv63_0) else "0";
    icmp_ln327_1_fu_322_p2 <= "1" when (p_Result_4_fu_282_p4 = ap_const_lv11_433) else "0";
    icmp_ln327_fu_236_p2 <= "1" when (p_Result_s_fu_202_p4 = ap_const_lv11_433) else "0";
    icmp_ln329_1_fu_328_p2 <= "1" when (signed(sh_amt_2_fu_312_p2) > signed(ap_const_lv12_0)) else "0";
    icmp_ln329_fu_242_p2 <= "1" when (signed(sh_amt_fu_226_p2) > signed(ap_const_lv12_0)) else "0";
    icmp_ln330_1_fu_350_p2 <= "1" when (signed(sh_amt_2_fu_312_p2) < signed(ap_const_lv12_36)) else "0";
    icmp_ln330_fu_264_p2 <= "1" when (signed(sh_amt_fu_226_p2) < signed(ap_const_lv12_36)) else "0";
    icmp_ln337_1_fu_417_p2 <= "1" when (tmp_2_reg_554 = ap_const_lv4_0) else "0";
    icmp_ln337_fu_371_p2 <= "1" when (tmp_reg_513 = ap_const_lv4_0) else "0";

    imag_out_TDATA_blk_n_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, imag_out_TREADY_int_regslice)
    begin
        if ((((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            imag_out_TDATA_blk_n <= imag_out_TREADY_int_regslice;
        else 
            imag_out_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    imag_out_TDATA_int_regslice <= 
        sub_ln455_1_fu_466_p2 when (p_Result_9_reg_527_pp0_iter1_reg(0) = '1') else 
        ap_phi_reg_pp0_iter2_ref_tmp10_0_reg_159;
    imag_out_TVALID <= regslice_both_imag_V_data_V_U_vld_out;

    imag_out_TVALID_int_regslice_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            imag_out_TVALID_int_regslice <= ap_const_logic_1;
        else 
            imag_out_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    lshr_ln331_1_fu_438_p2 <= std_logic_vector(shift_right(unsigned(zext_ln320_1_fu_413_p1),to_integer(unsigned('0' & zext_ln331_2_fu_435_p1(31-1 downto 0)))));
    lshr_ln331_fu_392_p2 <= std_logic_vector(shift_right(unsigned(zext_ln320_fu_367_p1),to_integer(unsigned('0' & zext_ln331_fu_389_p1(31-1 downto 0)))));
    p_Result_10_fu_406_p3 <= (ap_const_lv1_1 & p_Result_5_reg_532);
    p_Result_4_fu_282_p4 <= dst_dout(126 downto 116);
    p_Result_8_fu_360_p3 <= (ap_const_lv1_1 & trunc_ln315_reg_491);
    p_Result_s_fu_202_p4 <= dst_dout(62 downto 52);

    real_out_TDATA_blk_n_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, real_out_TREADY_int_regslice)
    begin
        if ((((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            real_out_TDATA_blk_n <= real_out_TREADY_int_regslice;
        else 
            real_out_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    real_out_TDATA_int_regslice <= 
        sub_ln455_fu_452_p2 when (p_Result_7_reg_486_pp0_iter1_reg(0) = '1') else 
        ap_phi_reg_pp0_iter2_ref_tmp6_0_reg_138;
    real_out_TVALID <= regslice_both_real_V_data_V_U_vld_out;

    real_out_TVALID_int_regslice_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            real_out_TVALID_int_regslice <= ap_const_logic_1;
        else 
            real_out_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    sh_amt_1_fu_248_p2 <= std_logic_vector(unsigned(ap_const_lv10_0) - unsigned(trunc_ln326_fu_232_p1));
    sh_amt_2_fu_312_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(zext_ln311_1_fu_292_p1));
    sh_amt_3_fu_334_p2 <= std_logic_vector(unsigned(ap_const_lv10_0) - unsigned(trunc_ln326_1_fu_318_p1));
    sh_amt_fu_226_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(zext_ln311_fu_212_p1));
    shl_ln339_1_fu_429_p2 <= std_logic_vector(shift_left(unsigned(zext_ln338_1_fu_422_p1),to_integer(unsigned('0' & zext_ln339_1_fu_426_p1(31-1 downto 0)))));
    shl_ln339_fu_383_p2 <= std_logic_vector(shift_left(unsigned(zext_ln338_fu_376_p1),to_integer(unsigned('0' & zext_ln339_fu_380_p1(31-1 downto 0)))));
    sub_ln455_1_fu_466_p2 <= std_logic_vector(unsigned(ap_const_lv64_0) - unsigned(ap_phi_reg_pp0_iter2_ref_tmp10_0_reg_159));
    sub_ln455_fu_452_p2 <= std_logic_vector(unsigned(ap_const_lv64_0) - unsigned(ap_phi_reg_pp0_iter2_ref_tmp6_0_reg_138));
    t_last_read_fu_98_p2 <= eos_dout;
    trunc_ln145_fu_180_p1 <= dst_dout(63 - 1 downto 0);
    trunc_ln315_fu_216_p1 <= dst_dout(52 - 1 downto 0);
    trunc_ln326_1_fu_318_p1 <= sh_amt_2_fu_312_p2(10 - 1 downto 0);
    trunc_ln326_fu_232_p1 <= sh_amt_fu_226_p2(10 - 1 downto 0);
    trunc_ln331_1_fu_356_p1 <= sh_amt_2_fu_312_p2(6 - 1 downto 0);
    trunc_ln331_fu_270_p1 <= sh_amt_fu_226_p2(6 - 1 downto 0);
    trunc_ln_fu_184_p4 <= dst_dout(126 downto 64);
    zext_ln311_1_fu_292_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_4_fu_282_p4),12));
    zext_ln311_fu_212_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_s_fu_202_p4),12));
    zext_ln320_1_fu_413_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_10_fu_406_p3),54));
    zext_ln320_fu_367_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_8_fu_360_p3),54));
    zext_ln328_1_fu_448_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_10_fu_406_p3),64));
    zext_ln328_fu_402_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_8_fu_360_p3),64));
    zext_ln331_1_fu_398_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln331_fu_392_p2),64));
    zext_ln331_2_fu_435_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln331_1_reg_563),54));
    zext_ln331_3_fu_444_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln331_1_fu_438_p2),64));
    zext_ln331_fu_389_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln331_reg_522),54));
    zext_ln338_1_fu_422_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_10_fu_406_p3),64));
    zext_ln338_fu_376_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_8_fu_360_p3),64));
    zext_ln339_1_fu_426_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sh_amt_3_reg_549),64));
    zext_ln339_fu_380_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sh_amt_1_reg_508),64));
end behav;
